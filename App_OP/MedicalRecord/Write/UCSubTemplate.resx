<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAC0
        BwAAAk1TRnQBSQFMAgEBAgEAASABAQEwAQEBEAEAARABAAT/AREBEAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEQBgABCDQAAf8BfwH/AX8B/wF/Af8BfwH/AX8B/wF/Af8BfwH/AX8B/wF/Af8BfwH/
        AX8B/wF/Af8BfwH/AX9CAAH/AX8B/wF/Af8BfwH/AX8B/wF/Af8BfwH/AX8B/wF/Af8BfwH/AX8B/wF/
        Af8BfwH/AX8B/wF/BgAB/wF/AbkBUgH2ATEB9gExAfYBMQH2ATEB9gExAfYBMQHWATEB1gExAdYBMQHW
        ATEBmAFOAf8Bf0IAAS0BXgFkAVEBZAFRAWQBUQFkAVEBZAFRAWQBUQFkAVEBRAFRAUQBUQFEAVEBRAFR
        AUQBUQGpAVUB3gF7Af8BfwIAAf8BfwH2ATUB/wF/Ad8BewHfAXsB3wF7Ad8BdwHfAXcB3wF3Ad8BdwHf
        AXcB3wF3AfYBMQH/AX9CAAFkAVEBpgFVAY0BagEwAXsBiAFyAYgBcgGIAXIBhwFyAWcBcgFnAXIBZwFy
        AWYBcgFmAW4BxQFhAfYBagH/AX8CAAH/AX8BFgE2Af8BfwG+AXMBvwFzAb4BcwG+AXMBvgFzAb4BcwG/
        AXMBvgFzAd8BdwH2ATUB/wF/QgABpQFVAQkBXgEpAWIBlgF/Ae0BdgHKAXYBqgF2AakBcgGpAXIBqQFy
        AYgBcgGIAXIBiAFyAUcBagELAVoB/wF/AgAB/wF/ARcBOgH/AX8BvwF3Ab4BdwG+AXcBvwFzAb4BcwG+
        AXMBvgFzAb4BcwHfAXcB9gE1Af8Bf0IAAaUBWQGNAWoBBwFiAXUBewFzAXsB7AF2AewBdgHsAXYBywF2
        AcsBdgHKAXYBygF2AaoBcgGpAXIBpQFZAd4BewIAAf8BfwEXAToB/wF/Ad8BdwFXAUIBVwFCAVcBQgFX
        AUIBVwFCAVcBQgG/AXMB3wF3ARYBNgH/AX9CAAHGAV0BEQFzAmoB8AFyAbgBfwEvAXsBLgF7AQ4BewEN
        AXsBDQF3AQ0BdwHsAXYB7AF2AewBdgEoAWYBNwFvAgAB/wF/ATcBPgH/AX8B3wF3Ab4BcwGeAXMBngFz
        AZ4BcwGeAW8BngFvAb8BdwHfAXsBFwE6Af8Bf0IAAeYBXQGVAXsBLgF3AYsBagHbAX8B+wF/AdsBfwHb
        AX8B2wF/AdoBfwHaAX8BuQF/AbgBfwG4AX8BMwF3AU4BYgIAAf8BfwE4AT4B/wF/Ad8BdwF4AUYBeAFG
        AXgBRgF4AUYBeAFCAVcBQgHfAXcB3wF7ATcBOgH/AX9CAAEHAWIB2AF/AZIBfwHsAXIBaQFqAWkBagFp
        AWoBaQFmAWkBZgFJAWYBSAFmAUgBZgHGAVkBxgFZAcUBWQEJAV4CAAH/AX8BWAFCAf8BfwHfAXsBvgFz
        Ab4BcwG+AXMBvgFzAb4BcwG+AXMB3wF3Ad8BewE3AT4B/wF/QgABJwFiAdkBfwG0AX8BswF/AZIBfwGR
        AX8BcQF/AXABfwFwAX8BbwF/AU8BfwFPAX8BpQFZAf8BfwH/AX8B/wF/AgAB/wF/AVgBQgH/AX8B3wF7
        AZgBSgF4AUYBeAFGAXgBRgF4AUYBeAFGAd8BdwH/AXsBOAE+Af8Bf0IAAScBZgH6AX8B1QF/AbUBfwG0
        AX8BtAF/AdcBfwH6AX8B+gF/AfoBfwH6AX8B2QF/AQYBXgH/AX8GAAH/AX8BeQFGAf8BfwHfAXsBvgF3
        Ab4BdwG+AXcBvgF3Ab4BcwG+AXMB3wF7Af8BfwFYAUIB/wF/QgABRwFmAfoBfwHWAX8B1gF/AdYBfwG3
        AX8BSQFmAScBYgEnAWIBJwFiAScBYgEHAWIBsAFqAf8BfwYAAf8BfwF5AUYB/wF/Af8BewGYAUoBmAFK
        AZgBSgGYAUoBmAFKAZgBSgHfAXsB/wF/AVgBQgH/AX9CAAFIAWYB/AF/AfwBfwH8AX8B2gF/AYwBagH/
        AX8B/wF/Af8BfwH/AX8B/wF/Af8BfwH/AX8B/wF/BgAB/wF/AZkBSgH/AX8B/wF7Af8BewH/AXsB/wF7
        Ad8BewHfAXsB3wF7Ad8BewH/AX8BeQFGAf8Bf0IAAfEBbgFoAWoBaAFqAWgBagFIAWYBmwF3Af8BfxQA
        Af8BfwGZAUoB/wF/Af8BfwH/AX8B/wF/Af8BewH/AXsB/wF7Ad8BewHfAXsB/wF/AXkBRgH/AX9CAAH/
        AX8B/wF/Af8BfwH/AX8B/wF/Af8BfxYAAf8BfwGaAUoB/wF/Af8BfwH/AX8B/wF/Af8BfwH/AX8B/wF/
        Af8BfwH/AX8B/wF/AZkBSgH/AX9kAAH/AX8BGwFfAboBTgG6AUoBugFKAZoBSgGaAUoBmgFKAZoBSgGa
        AUoBmQFKAZkBSgEbAV8B/wF/QgABQgFNAT4HAAE+AwABKAMAAUADAAEQAwABAQEAAQEFAAGAFwAD/wEA
        Av8BgAEBBQABAwGAAQEGAAGAAQEGAAGAAQEGAAGAAQEGAAGAAQEGAAGAAQEGAAGAAQEGAAGAAQEGAAGA
        AQEFAAEDAYABAQUAAQMBgAEBBQABAwGAAQEEAAEBAf8BgAEBBAABAwH/AYABAQQAAv8BgAEBGgAL
</value>
  </data>
</root>